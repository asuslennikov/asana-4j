package ru.jewelline.asana4j.api.entity;

import java.util.List;

/**
 * A story represents an activity associated with an object in the Asana system. Stories are generated by the
 * system whenever users take actions such as creating or assigning tasks, or moving tasks between projects.
 * Comments are also a form of user-generated story.
 * <p>
 * Stories are a form of history in the system, and as such they are read-only. Once generated, it is not possible
 * to modify a story.
 */
public interface Story extends HasId {
    /**
     * @return The time at which this story was created.
     * @api.field <code>created_at</code>
     * @api.access Read-only
     */
    String getCreatedAt();

    /**
     * @return The user who created the story.
     * @api.field <code>created_by</code>
     * @api.access Read-only
     * @see User
     */
    User getCreatedBy();

    /**
     * Return a current hearted status. This property only exists for stories that provide hearts.
     *
     * @return <code>true</code> if the story is hearted by the authorized user, <code>false</code> if not.
     * @api.field <code>hearted</code>
     * @api.access Read-only
     */
    boolean isHearted();

    /**
     * @return Array of users who have hearted this task. This property only exists for stories that provide hearts.
     * @api.field <code>hearts</code>
     * @api.access Read-only
     */
    List<User> getHeartsAuthors();

    /**
     * @return The number of users who have hearted this task. This property only exists for stories that provide hearts.
     * @api.field <code>num_hearts</code>
     * @api.access Read-only
     */
    int getNumberOfHearts();

    /**
     * Returns human-readable text for the story or comment. This will not include the name of the creator.
     * <p>
     * This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may
     * not always say “assigned to …”. The API currently does not provide a structured way of inspecting the
     * meaning of a story.
     *
     * @return Human-readable text for the story or comment.
     * @api.field <code>text</code>
     * @api.access Read-only
     */
    String getText();

    /**
     * Returns HTML formatted text for a comment. This will not include the name of the creator.
     * <p>
     * This field is only returned if explicitly requested using the <code>opt_fields</code> query parameter
     * (see {@link ru.jewelline.asana4j.api.clients.modifiers.QueryFieldsModifier}).
     *
     * @return HTML formatted text for a comment.
     * @api.field <code>html_text</code>
     * @api.access Read-only
     * @see ru.jewelline.asana4j.api.clients.modifiers.QueryFieldsModifier
     */
    String getHtmlText();

    /**
     * @return The object this story is associated with. Currently may only be a task.
     * @api.field <code>target</code>
     * @api.access Read-only
     * @see Task
     */
    Task getTarget();

    /**
     * @return The component of the Asana product the user used to trigger the story.
     * @api.field <code>source</code>
     * @api.access Read-only
     */
    String getSource();

    /**
     * @return The type of story this is.
     * @api.field <code>type</code>
     * @api.access Read-only
     */
    String getType();
}
